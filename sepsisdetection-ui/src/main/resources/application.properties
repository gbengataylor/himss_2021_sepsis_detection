quarkus.log.level=INFO
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] %s%e%n
quarkus.log.console.level=INFO
quarkus.log.console.color=false
quarkus.log.category."org.apache.kafka.common.utils".level=WARN
quarkus.log.category."org.apache.kafka.clients.admin".level=ERROR
quarkus.log.category."org.apache.kafka.clients".level=ERROR
quarkus.log.category."org.apache.kafka.clients.producer".level=WARN
quarkus.log.category."org.apache.kafka.clients.consumer".level=WARN
quarkus.log.category."org.apache.kafka.clients.consumer.internals".level=WARN
quarkus.log.category."io.smallrye.reactive.messaging.provider".level=WARN
quarkus.log.category."io.smallrye.reactive.messaging.kafka".level=WARN


#######     messaging       ################

// curl -v localhost:3080/q/health/ready
quarkus.kafka.health.enabled=true

%dev.kafka.bootstrap.servers=localhost:9094

mp.messaging.incoming.fhir-event.connector=smallrye-kafka
mp.messaging.incoming.fhir-event.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.fhir-event.topic=risk-assessment-command
mp.messaging.incoming.fhir-event.group.id=riskAssessmentService

// connector analyzes the incoming records and tries to create Cloud Event metadata
// When enabled adds the following type of metadata to header:
//  io.smallrye.reactive.messaging.kafka.impl.ce.DefaultIncomingKafkaCloudEventMetadata
mp.messaging.incoming.fhir-event.cloud-events=true

##########################################


######      container image   ##########
quarkus.container-image.group=quay.io/redhat_naps_da
quarkus.container-image.name=sepsisdetection-ui
quarkus.container-image.tag=0.1.0
########################################
